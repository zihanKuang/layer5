{"version":3,"file":"component---src-sections-projects-sistent-components-select-code-js-ee5c479a9495a78b56d0.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js","webpack://Layer5/./src/sections/Projects/Sistent/components/select/code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Code from \"../../../../../components/CodeBlock\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <Code codeString={code} language=\"javascript\" />\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CodeBlock } from \"../button/code-block\";\n\nimport { SistentThemeProvider } from \"@layer5/sistent\";\n\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nimport {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from \"@mui/material\";\nimport { Header, SectionNav } from \".\";\n\nconst codes = {\n  \"variant-outlined\": `<Select>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"variant-filled\": `<Select variant=\"filled\">\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"variant-standard\": `<Select variant=\"standard\">\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"size-auto\": `<Select autoWidth>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"size-small\": `<Select size=\"small\">\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"size-fullwidth\": `<Select fullWidth>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"behavior-error-disabled\": `<Select disabled>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>\n<Select error>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"behavior-required\": `<FormControl required>\n  <InputLabel id=\"demo-select-label-outlined\">Age</InputLabel>\n  <Select\n    labelId=\"demo-select-label-outlined\"\n    label=\"Age\"\n  >\n    <MenuItem value={10}>Ten</MenuItem>\n    <MenuItem value={20}>Twenty</MenuItem>\n    <MenuItem value={30}>Thirty</MenuItem>\n  </Select>\n</FormControl>`,\n\n  \"customize-label\": `<FormControl sx={{ width: \"200px\" }}>\n  <InputLabel id=\"demo-select-label\">Age</InputLabel>\n  <Select\n    labelId=\"demo-select-label\"\n    label=\"Age\"\n  >\n    <MenuItem value={10}>Ten</MenuItem>\n    <MenuItem value={20}>Twenty</MenuItem>\n    <MenuItem value={30}>Thirty</MenuItem>\n  </Select>\n</FormControl>`,\n\n  \"customize-helper-text\": `<FormControl sx={{ width: \"200px\" }}>\n  <Select>\n    <MenuItem value={10}>Ten</MenuItem>\n    <MenuItem value={20}>Twenty</MenuItem>\n    <MenuItem value={30}>Thirty</MenuItem>\n  </Select>\n  <FormHelperText>This is a helper text</FormHelperText>\n</FormControl>`,\n\n  \"customize-placeholder\": `const [selectedAge, setSelectedAge] = React.useState(\"\");\n\n<Select\n  onChange={(e) => setSelectedAge(e.target.value)}\n  renderValue={() => {\n    if (selectedAge == \"\") return <em>Select an age</em>;\n    return selectedAge;\n  }}\n  value={selectedAge}\n  displayEmpty\n>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n\n  \"customize-grouping\": `<Select>\n  <ListSubheader muiSkipListHighlight>Group 1</ListSubheader>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <ListSubheader muiSkipListHighlight>Group 2</ListSubheader>\n  <MenuItem value={30}>Thirty</MenuItem>\n  <MenuItem value={40}>Fourty</MenuItem>\n  <ListSubheader muiSkipListHighlight>Group 3</ListSubheader>\n  <MenuItem value={50}>Fifty</MenuItem>\n  <MenuItem value={60}>Sixty</MenuItem>\n</Select>`,\n\n  multiselect: `const [multipleAges, setMultipleAges] = React.useState([]);\nconst handleMultiplSelect = (event) => {\n  let agesList = event.target.value;\n  setMultipleAges(agesList);\n};\n\n<Select\n  multiple\n  input={<OutlinedInput label=\"Name\" />}\n  value={multipleAges}\n  onChange={handleMultiplSelect}\n>\n  <MenuItem value={10}>Ten</MenuItem>\n  <MenuItem value={20}>Twenty</MenuItem>\n  <MenuItem value={30}>Thirty</MenuItem>\n</Select>`,\n};\n\nconst SelectCode = () => {\n  const { isDark } = useStyledDarkMode();\n  const [selectedAge, setSelectedAge] = React.useState(\"\");\n  const [multipleAges, setMultipleAges] = React.useState([10]);\n  const handleMultiplSelect = (event) => {\n    let agesList = event.target.value;\n    setMultipleAges(agesList);\n  };\n  return (\n    <SistentLayout title=\"Select\">\n      <div className=\"content\">\n        <Header />\n        <SectionNav />\n\n        <div className=\"main-content\">\n          <a id=\"Select variants\">\n            <h2>Select variants</h2>\n          </a>\n          <p>\n            The select comes in three types: Outlined, Filled, and Standard. To\n            specify the variant, pass a value to the variant prop.\n          </p>\n          <h3>Outlined</h3>\n          <p>\n            If not specified, the default variant of the select if outlined.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10}>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"outlined-selection\"\n              code={codes[\"variant-outlined\"]}\n            />\n          </div>\n          <h3>Filled</h3>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10} variant=\"filled\">\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"filled-selection\" code={codes[\"variant-filled\"]} />\n          </div>\n          <h3>Standard</h3>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10} variant=\"standard\">\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"standard-selection\"\n              code={codes[\"variant-standard\"]}\n            />\n          </div>\n          <a id=\"Sizes\">\n            <h2>Sizes</h2>\n          </a>\n          <p>\n            There are 3 size option for the select component: autowidth, small,\n            and fullWidth. Depending on the size of the select, different prop\n            can be passed to the component.\n          </p>\n          <h3>Autowidth</h3>\n          <p>\n            An autoWidth option is passed to the component to enable this\n            attribute\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10} autoWidth>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"size-auto\" code={codes[\"size-auto\"]} />\n          </div>\n          <h3>Small</h3>\n          <p>\n            To generate small select, pass a size prop with a value of small\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10} size=\"small\">\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"size-small\" code={codes[\"size-small\"]} />\n          </div>\n          <h3>Full width</h3>\n          <p>\n            The select will expand the full width of its parent when passed\n            fullWidth prop\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10} fullWidth>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"size-fullwidth\" code={codes[\"size-fullwidth\"]} />\n          </div>\n          <a id=\"Customization\">\n            <h2>Customization</h2>\n          </a>\n          <h3>Label</h3>\n          <p>\n            To add a label to the select component, wrap it inside a FormControl\n            component. Add an InputLabel component and link it to the select\n            component using the labelId prop. Ensure the label prop in the\n            Select component matches the InputLabel text.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <FormControl sx={{ width: \"200px\" }}>\n                  <InputLabel id=\"demo-select-label\">Age</InputLabel>\n                  <Select\n                    labelId=\"demo-select-label\"\n                    id=\"demo-select\"\n                    label=\"Age\"\n                  >\n                    <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem>\n                  </Select>\n                </FormControl>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"customize-label\" code={codes[\"customize-label\"]} />\n          </div>\n          <h3>Helper text</h3>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <FormControl sx={{ width: \"200px\" }}>\n                  <Select defaultValue={10}>\n                    <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem>\n                  </Select>\n                  <FormHelperText>This is a helper text</FormHelperText>\n                </FormControl>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"customize-helper-text\"\n              code={codes[\"customize-helper-text\"]}\n            />\n          </div>\n          <h3>Placeholder</h3>\n          <p>\n            To add a placeholder, use the renderValue prop to display a\n            placeholder text when no value is selected.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select\n                  id=\"demo-select-outlined\"\n                  onChange={(e) => setSelectedAge(e.target.value)}\n                  renderValue={() => {\n                    if (selectedAge == \"\") return <em>Select an age</em>;\n                    return selectedAge;\n                  }}\n                  value={selectedAge}\n                  displayEmpty\n                >\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"customize-placeholder\"\n              code={codes[\"customize-placeholder\"]}\n            />\n          </div>\n          <h3>Grouping</h3>\n          To group selection options, use the ListSubheader component to create\n          headers for each group within the dropdown menu. This helps users to\n          easily navigate and find the options they need.\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select defaultValue={10}>\n                  <ListSubheader muiSkipListHighlight>Group 1</ListSubheader>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <ListSubheader muiSkipListHighlight>Group 2</ListSubheader>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                  <MenuItem value={40}>Fourty</MenuItem>\n                  <ListSubheader muiSkipListHighlight>Group 3</ListSubheader>\n                  <MenuItem value={50}>Fifty</MenuItem>\n                  <MenuItem value={60}>Sixty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"customize-grouping\"\n              code={codes[\"customize-grouping\"]}\n            />\n          </div>\n          <p>\n            Additional props such as error, required, and disabled can be passed\n            to the select component to customize its behavior.\n          </p>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select disabled defaultValue={10}>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n                <Select error defaultValue={10}>\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock\n              name=\"behavior-error-disabled\"\n              code={codes[\"behavior-error-disabled\"]}\n            />\n          </div>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <FormControl sx={{ width: \"200px\" }} required>\n                  <InputLabel id=\"demo-select-label-outlined\">Age</InputLabel>\n                  <Select\n                    labelId=\"demo-select-label-outlined\"\n                    id=\"demo-select-outlined\"\n                    label=\"Age\"\n                  >\n                    <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem>\n                  </Select>\n                </FormControl>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"adding-icons\" code={codes[\"behavior-required\"]} />\n            <p>\n              <strong>NOTE:</strong>\n            </p>\n            <p>\n              When the select component is marked as required, an asterisk is\n              added to the label to indicate this to the user. It is recommended\n              to use this feature in conjunction with the label for better\n              clarity.\n            </p>\n          </div>\n          <a id=\"Multi-select\">\n            <h2>Multi-select</h2>\n          </a>\n          <div className=\"showcase\">\n            <div className=\"items\">\n              <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                <Select\n                  multiple\n                  input={<OutlinedInput label=\"Name\" />}\n                  value={multipleAges}\n                  onChange={handleMultiplSelect}\n                >\n                  <MenuItem value={10}>Ten</MenuItem>\n                  <MenuItem value={20}>Twenty</MenuItem>\n                  <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n              </SistentThemeProvider>\n            </div>\n            <CodeBlock name=\"multiselect\" code={codes[\"multiselect\"]} />\n          </div>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n\nexport default SelectCode;\n"],"names":["CodeBlock","_ref","name","code","showCode","setShowCode","useState","React","className","type","id","onChange","prev","htmlFor","Code","codeString","language","codes","multiselect","SelectCode","isDark","useStyledDarkMode","selectedAge","setSelectedAge","multipleAges","setMultipleAges","SistentLayout","title","Header","SectionNav","SistentThemeProvider","initialMode","Select","defaultValue","MenuItem","value","variant","autoWidth","size","fullWidth","FormControl","sx","width","InputLabel","labelId","label","FormHelperText","e","target","renderValue","displayEmpty","ListSubheader","muiSkipListHighlight","disabled","error","required","multiple","input","OutlinedInput","event","agesList"],"sourceRoot":""}