{"componentChunkName":"component---src-templates-blog-tag-list-js","path":"/blog/tag/envoy.html","result":{"data":{"allMdx":{"nodes":[{"id":"c11976ed-7acf-54ac-95d4-a0124344afb9","body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Unlocking the Power of WebAssembly in Service Mesh Management\",\n  \"subtitle\": \"Layer5 and Intel Collaboration\",\n  \"date\": \"2023-09-05 10:30:05 -0530\",\n  \"author\": \"Lee Calcote\",\n  \"thumbnail\": \"../../../../assets/images/partners/intel-grey.svg\",\n  \"darkthumbnail\": \"../../../../assets/images/partners/intel_white.svg\",\n  \"category\": \"Partners\",\n  \"description\": \"This is a short summary of my blog post. This text will show in the blog's list view and in community newsletters.\",\n  \"tags\": [\"WASM\", \"Envoy\", \"Istio\"],\n  \"type\": \"Blog\",\n  \"resource\": false,\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(BlogWrapper, {\n    mdxType: \"BlogWrapper\"\n  }, mdx(\"p\", null, \"Welcome to another exciting edition of Feature Friday Bulletin, where we unveil the latest enhancements to Meshery, your go-to service mesh management tool. This week, we're thrilled to announce a groundbreaking collaboration between Layer5 and Intel, bringing you a suite of service mesh management features tailored for WebAssembly-based network traffic management filters in Envoy, the sidecar proxy used in the data plane of Istio. These new features open up a world of possibilities for your service mesh architecture.\"), mdx(\"img\", {\n    src: \"https://mcusercontent.com/6b50be5aea3dfe1fd4c041d80/images/c4a4d061-a42d-5373-f789-cc29a21b3d5c.png\",\n    width: \"15%\",\n    style: {\n      \"margin\": \"1rem 1rem 1rem 0rem\"\n    }\n  }), mdx(\"h2\", null, \"Seamless WASM Envoy Filter Management\"), mdx(\"p\", null, \"With this collaboration, we're introducing powerful features that simplify the management of Envoy WASM filters via Meshery:\"), mdx(\"h3\", null, \"Meshery UI and CLI Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Import WASM Envoy Filters\"), \": Easily import your WebAssembly Envoy filters into Meshery using the intuitive UI or the command-line interface (\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.meshery.io/reference/mesheryctl#data-plane-intelligence\"\n  }, \"CLI\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Publish and Clone Filters\"), \": Share your filters with the community by publishing them in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://meshery.io/catalog\"\n  }, \"Meshery Catalog\"), \" and make it effortless for others to clone them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Download WASM Binaries\"), \": Access and download WebAssembly binaries directly from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://cloud.layer5.io/\"\n  }, \"Meshery Cloud\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Efficient Data Plane Design\"), \": Seamlessly design and deploy Istio and Envoy data planes using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://layer5.io/cloud-native-management/meshmap\"\n  }, \"MeshMap\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Contribute to Open Source\"), \": Get involved with the service mesh community by contributing to any of the 7 open-source \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/layer5io/wasm-filters\"\n  }, \"wasm-filters\"), \" developed by Layer5.\")), mdx(\"h3\", null, \"Collaboration and Engagement\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \":star2: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Support Your Favorites\"), \": Encourage collaboration by starring your \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/meshery/meshery\"\n  }, \"favorite repository\"), \" on GitHub.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \":playground_slide: \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Hands-On Experience\"), \": Experience these features firsthand in the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://playground.meshery.io/\"\n  }, \"Meshery Playground\"), \" by accessing version v0.6.109.\")), mdx(\"img\", {\n    src: \"https://mcusercontent.com/6b50be5aea3dfe1fd4c041d80/images/a07ef29a-4cf8-986e-9bd3-78db7dc00ce1.png\",\n    width: \"15%\",\n    style: {\n      \"margin\": \"1rem 1rem 1rem 0rem\"\n    }\n  }), mdx(\"h2\", null, \"Envoy WASM Filter Management\"), mdx(\"p\", null, \"We've revamped the management of Envoy WASM filters in Meshery with several enhancements:\"), mdx(\"h3\", null, \"Meshery Server Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 New WASM Filter Component: A new component is available in the Design Configurator to simplify filter management.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Improved Component Icon: Enhancements have been made to provide a more user-friendly experience.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Relationship Patch Policy: A new policy has been introduced to streamline the relationship between components.\")), mdx(\"h3\", null, \"Meshery CLI Command Line\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Import Filters: Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mesheryctl filter import [URL | filepath]\"), \" to effortlessly import filters.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Delete Filters: Remove unwanted filters with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mesheryctl filter delete [filter-name | ID]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 View Filters: Gain insights into your filters using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mesheryctl filter view [filter-name | ID]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 List and Search Filters: Easily navigate filters with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mesheryctl filter list [filter-name | ID]\"), \".\")), mdx(\"h3\", null, \"MeshMap Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Apply WASM Filters: Hierarchically apply filters to your Envoy configurations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Deploy/Undeploy Filters: Streamline the deployment and removal of filters with custom configurations.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Enhanced Visibility: View filters within a dedicated panel and seamlessly drop them onto the canvas.\")), mdx(\"img\", {\n    src: \"https://mcusercontent.com/6b50be5aea3dfe1fd4c041d80/images/1e9c2e71-1b3e-a132-4766-8cefdc9861d2.png\",\n    width: \"15%\",\n    style: {\n      \"margin\": \"1rem 1rem 1rem 0rem\"\n    }\n  }), mdx(\"h3\", null, \"Meshery UI Enhancements\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Import Filters: Import filters directly via URL or filesystem.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Improved Browsing: Browse, search, and view filters in both grid view and table view.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Streamlined Lists: Easily list and search filters in grid view or table view.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Download Filters: Download filters effortlessly from the UI.\")), mdx(\"h3\", null, \"Layer5 Cloud and Catalog Integration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Permanent Storage and Artifact Dispersal: Ensure your filters are securely stored and widely accessible.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Catalog Features: Import, clone, download, publish, and unpublish filters within the Meshery Catalog.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Enhanced Privacy Controls: Manage user permissions, team ownership, and visibility for your filters.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Content Curation: Streamline content curation with an approval flow request queue.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 On-Premises Deployment: Run Layer5 Cloud on-premises using Docker Compose or Helm Chart.\")), mdx(\"h2\", null, \"Performance Management Upgrades\"), mdx(\"p\", null, \"In addition to Envoy WASM filter management, we've also introduced new performance management features:\"), mdx(\"h3\", null, \"Meshery Server\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Performance Profiles: Tailor your performance profiles to match your specific needs.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 SSL Certificate Support: Benefit from SSL certificate support for Fortio in the server.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Performance Analysis Comparison: Compare performance with and without filters.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 GetNighthawk and Cloud Native Performance Releases: Access the latest releases of GetNighthawk and Cloud Native Performance.\")), mdx(\"h3\", null, \"Meshery CLI\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Performance Profile Flags: Specify additional load generator flags with performance profiles.\")), mdx(\"h3\", null, \"Meshery UI\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Performance Profile Flags: Customize load generator flags directly in the UI.\")), mdx(\"h3\", null, \"Cloud Native Performance Project\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Define Performance Profiles: Clearly define your performance profiles.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Dashboard Integration: Display test results on the dashboard.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Intel Integration: Incorporate Intel design into scheduled workflows for Istio.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 Consolidated Performance Profiles: Streamline performance profiles on the dashboard.\")), mdx(\"h3\", null, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"http://localhost:8000/cloud-native-management/gitops\"\n  }, \"MeshMap Snapshot\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 GitHub Integrated Screenshots: Capture GitHub-integrated screenshots of deployments.\")), mdx(\"p\", null, \"This collaboration between Layer5 and Intel marks a significant milestone in service mesh management. These enhancements empower you to take full advantage of WebAssembly-based network traffic management filters in Envoy, bringing a new level of flexibility and control to your Istio deployments.\"), mdx(\"p\", null, \"Stay tuned for more exciting updates in the world of service mesh management with Meshery. We can't wait to see the incredible innovations these features will inspire in your projects. Don't forget to explore these new capabilities and let us know your thoughts!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://meshery.io/get-started\"\n  }, \"Get Started with Meshery\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://play.meshery.io\"\n  }, \"Try Meshery in the Cloud Native Playground\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Unlocking the Power of WebAssembly in Service Mesh Management","subtitle":"Layer5 and Intel Collaboration","date":"September 5th, 2023","author":"Lee Calcote","thumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/06fcccd9678b694969c3285517e791ac/intel-grey.svg"},"darkthumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/cb4d90596f4918c222e6264c6b2b0cfa/intel_white.svg"}},"fields":{"slug":"/blog/partners/unlocking-the-power-of-webassembly-in-service-mesh-management"}},{"id":"b171f9fc-a31b-5e80-ba6b-cd0f83878e10","body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Debug Envoy Proxy\",\n  \"subtitle\": \"\",\n  \"description\": \"An open index for measuring performance of cloud native infrastructure in context of the value provided to your business.\",\n  \"date\": \"2022-05-27 09:10:00 +0000\",\n  \"author\": \"Layer5 Team\",\n  \"thumbnail\": \"./debug-envoy-proxy.svg\",\n  \"darkthumbnail\": \"./debug-envoy-proxy.svg\",\n  \"category\": \"Service Mesh\",\n  \"tags\": [\"Envoy\", \"Troubleshooting\"],\n  \"published\": true,\n  \"resource\": true,\n  \"type\": \"Blog\",\n  \"redirect_from\": [\"/blog/envoy/debug-envoy-proxy/\", \"/blog/envoy/debug-envoy-proxy\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(BlogWrapper, {\n    mdxType: \"BlogWrapper\"\n  }, mdx(\"p\", null, \"Trying to figure out what's happening with your request traffic? Not sure why your Envoy configuration isn't working? If you're using Istio as your gateway and need to troubleshoot your ingress traffic requests, here are a few tips for debugging Envoy proxy.\"), mdx(\"h2\", null, \"Enable Envoy Debug Logging\"), mdx(\"p\", null, \"By default Envoy system logs are sent to \", mdx(\"code\", null, \"/dev/stderr\"), \". This location be overridden using \", mdx(\"code\", null, \"--log-path\"), \". Logging to \", mdx(\"code\", null, \"/dev/stderr\"), \"  for system logs and to \", mdx(\"code\", null, \"/dev/stdout\"), \" for access logs can be useful when running Envoy inside a container. In this way, these two individual logstreams can be separated, and using this approach, logging requires no additional files or directories to be mounted.\"), mdx(\"div\", {\n    className: \"intro\"\n  }, mdx(\"p\", null, \"We recommend setting the Envoy proxy\\u2019s log level to debug in a pre-production environment. Debug logs can help you identify issues before you graduate the associated configuration to your production environment.\")), mdx(\"h3\", null, \"Using envoy CLI\"), mdx(\"p\", null, \"The envoy command has a \", mdx(\"code\", null, \"--log-level\"), \" flag that can be useful for debugging. By default, it\\u2019s set to info. To change it to debug, edit the envoy DaemonSet in the istio-system namespace and replace the \", mdx(\"code\", null, \"--log-level info\"), \" flag with \", mdx(\"code\", null, \"--log-level debug\"), \". Setting the Envoy log level to debug can be particilarly useful for debugging TLS connection failures.\"), mdx(\"h3\", null, \"Using container image\"), mdx(\"p\", null, \"If you\\u2019re using the Envoy image, you can set the log level to debug through the \", mdx(\"code\", null, \"ENVOY_LOG_LEVEL\"), \" environment variable. The log level for Envoy system logs can be set using the \", mdx(\"code\", null, \"-l\"), \" or \", mdx(\"code\", null, \"--log-level\"), \" option.\"), mdx(\"p\", null, \"The available log levels are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"trace\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"debug\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"info\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"warning/warn\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"error\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"critical\"), mdx(\"li\", {\n    className: \"highlight\",\n    style: {\n      \"width\": \"fit-content\"\n    }\n  }, \"off\")), mdx(\"p\", null, \"The default is \", mdx(\"span\", {\n    className: \"highlight\"\n  }, \"info\"), \".\"), mdx(\"h3\", null, \"Setting Envoy logs in the Helm configuration\"), mdx(\"p\", null, \"The Consul helm chart uses \", mdx(\"code\", null, \"envoyExtraArgs:\"), \" to leverage Envoy command line options. One of the helpful options is \", mdx(\"code\", null, \"--component-log-level\"), \". This provides granular control over setting log levels for Envoy components. In the example below, the components upstream, http, router and config are set to the debug log level. These four components are vital when debugging issues with requests between your services(sidecar proxies).\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"connectInject: enabled: true envoyExtraArgs: \\\"--component-log-level upstream:debug,http:debug,router:debug,config:debug\\\"\"))), mdx(\"p\", null, \"If you haven't set envoyExtraArgs: in consul-values.yaml just yet, you can set the log levels on the fly by using the following kubectl command:\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ kubectl exec pod/pod-name -c container-name -- curl -X POST http://localhost:19000/logging?config=debug\"))), mdx(\"p\", null, \"Example:\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ kubectl exec pod/static-client-5bf4575d9c-zr2b -c static-client -- curl -X POST  http://localhost:19000/logging?config=debug\"))), mdx(\"p\", null, \"You will execute the kubectl command for each component. Make sure to append the correct component at the end of the curl command, i.e. \", mdx(\"code\", null, \"logging? component = debug\"), \".\"), mdx(\"p\", null, \"If curl is not able to be used in your pod, you can alternatively use \", mdx(\"code\", null, \"kubectl port-forward pod-name 19000\"), \" to make the Envoy admin accessible. From another terminal window, you can then curl to change the log levels. The output you receive in the terminal will show the modified component log levels.\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ curl -X POST http://localhost:19000/logging? component = debug\"))), mdx(\"h3\", null, \"Access Envoy logs in Kubernetes\"), mdx(\"p\", null, \"Accessing Envoy logs via pods can be done with the following command:\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ kubectl logs --follow pod/ pod-name -c envoy-sidecar\"))), mdx(\"p\", null, \"The --follow flag provides a real time observation into Envoy logs. \"), mdx(\"h3\", null, \"Setting and Accessing Envoy logs when not using Helm.\"), mdx(\"p\", null, \"The following command will start an envoy side car proxy, set the log level to debug with -l debug and capture Envoy logs in envoy_logs.txt. The .txt file will need to be created before executing this command.\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ consul connect envoy -sidecar-for counting-1 -- -l debug --log-path envoy_logs.txt\"))), mdx(\"p\", null, \"To have granular control over the Envoy components that is needed to be debugged, use the following command:\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ consul connect envoy -sidecar-for counting-1 -- --log-path envoy_logs.txt --component-log-level upstream:debug,http:debug,router:debug,config:debug\"))), mdx(\"h2\", null, \"Find your Istio Ingress Gateway\"), mdx(\"p\", null, \"With Istio as your gateway, you should first look at \", mdx(\"code\", null, \"VirtualService\"), \" objects. These can show if the hosts are registered to the gateway correctly.\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ kubectl get virtualservice -o=yaml\"))), mdx(\"p\", null, \"However, sometimes, the \", mdx(\"a\", {\n    className: \"highlight\",\n    href: \"https://envoyproxy.io\"\n  }, \"Envoy\"), \" inside the gateway container is not properly configured (likely due to a bug). You can dump Envoy configuration to debug this further.\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"# find istio ingress gateway pod \\\\ $ kubectl get pods -n istio-system -l app=istio-ingressgateway\"))), mdx(\"p\", null, \"Let's use \", mdx(\"code\", null, \"istio-ingressgateway-a93019f9dfw-l39xd\"), \" as an example pod name.\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"# enable debugging on envoy \\\\ $ kubectl exec --namespace=istio-system \\\\ istio-ingressgateway-a93019f9dfw-l39xd \\\\ -c istio-proxy -- curl -X POST \\\\ http://localhost:15000/logging?level=debug\"))), mdx(\"p\", null, \"Then, use \", mdx(\"code\", null, \"istioctl\"), \" tool to dump route configuration (this will show the output from the \", mdx(\"a\", {\n    href: \"https://www.envoyproxy.io/docs/envoy/latest/operations/admin#operations-admin-interface-config-dump\"\n  }, mdx(\"code\", null, \"/config_dump\"), \" admin endpoint\"), \" on Envoy):\"), mdx(\"div\", null, mdx(\"pre\", null, mdx(\"code\", null, \"$ istioctl proxy-config routes -n istio-system -o=json \\\\ istio-ingressgateway-a93019f9dfw-l39xd\"))), mdx(\"p\", null, \"We hope these steps are useful to you. If you're still having trouble configuring Envoy proxy, open up a new thread on the \", mdx(\"a\", {\n    href: \"https://discuss.layer5.io\",\n    className: \"highlight\"\n  }, \"community discussion forum\"), \" or subscribe to the \", mdx(Link, {\n    to: \"/subscribe\",\n    className: \"highlight\",\n    mdxType: \"Link\"\n  }, \"Layer5 newletter\"), \" for tips and tricks.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Debug Envoy Proxy","subtitle":"","date":"May 27th, 2022","author":"Layer5 Team","thumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/da5d909604f7704bb30151391b60cdbb/debug-envoy-proxy.svg"},"darkthumbnail":{"childImageSharp":null,"extension":"svg","publicURL":"/static/da5d909604f7704bb30151391b60cdbb/debug-envoy-proxy.svg"}},"fields":{"slug":"/blog/service-mesh/debug-envoy-proxy"}}]}},"pageContext":{"tag":"Envoy"}},"staticQueryHashes":["1485533831","3750885592","4047814605","408154852"],"slicesMap":{},"matchPath":"/blog/tag/envoy"}