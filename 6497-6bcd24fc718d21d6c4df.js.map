{"version":3,"file":"6497-6bcd24fc718d21d6c4df.js","mappings":"kJAIA,MAAMA,EAAuBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,eAAVJ,CAAU,0JAwEvC,UA3CsBK,IAsBlBC,EAAAA,cAACP,EAAoB,KACnBO,EAAAA,cAACC,EAAAA,GAAS,M","sources":["webpack://Layer5/./src/sections/Meshery/Meshery-quotes/index.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../../../reusecore/Layout\";\n\nconst MesheryQuotesWrapper = styled.div`\n    margin-top: 2rem;\n    margin-bottom: 6rem;\n    h2{\n      margin: 0 auto 4rem auto;\n      max-width: 40%;\n      font-weight: 700;\n    }\n`;\n\n// const quotes_data = [\n//   {\n//     name: \"Yogi Porla\",\n//     position: \"Principal Engineer, HPE\",\n//     quote: \"Meshery helps us curate Service Mesh for tailored need by helping us running simulations and identifying the right fit Service Mesh that works efficiently across diverse ecosystem of tools.\"\n//   },\n//   {\n//     name: \"Jason S.\",\n//     position: \"Site Reliability Engineer\",\n//     quote: \"Huge fan of Kanvas. It doesn't get any more intuitive than this.\"\n//   },\n//   {\n//     name: \"Shane W.\",\n//     position: \"DevOps Architect\",\n//     quote: \"...the ability to benchmark Istio in MY cluster with MY workloads is just what I was looking for. I threw out my test scripts.\"\n//   },\n// ];\n\n\nconst MesheryQuotes = () => {\n  // const settings = {\n  //   dots: false,\n  //   infinite: true,\n  //   slidesToShow: 2,\n  //   slidesToScroll: 1,\n  //   autoplay: true,\n  //   speed: 8000,\n  //   autoplaySpeed: 2000,\n  //   pauseOnHover: true,\n  //   cssEase: \"linear\",\n  //   responsive: [\n  //     {\n  //       breakpoint: 768,\n  //       settings: {\n  //         slidesToShow: 1,\n  //         slidesToScroll: 1,\n  //       }\n  //     },\n  //   ]\n  // };\n  return (\n    <MesheryQuotesWrapper>\n      <Container>\n        {/*\n         Enable after go-live\n         */}\n        {/* <h2>Meshery Users Get Mushy</h2>\n        <Slider {...settings}>\n          {quotes_data.map((data,index) => (\n            <QuoteCard\n              key={`${data.name}${index}`}\n              name={data.name}\n              position={data.position}\n              quote={data.quote}\n            />\n          ))}\n        </Slider> */}\n      </Container>\n    </MesheryQuotesWrapper>\n  );\n};\n\nexport default MesheryQuotes;\n\n"],"names":["MesheryQuotesWrapper","styled","div","withConfig","displayName","componentId","MesheryQuotes","React","Container"],"sourceRoot":""}